#gui.py
import tkinter as tk
from tkinter import ttk, messagebox

def create_gui(run_simulation):
    root = tk.Tk()
    root.title("CPU Scheduler Simulator")

    algorithm_var = tk.StringVar()
    ttk.Label(root, text="Select Scheduling Algorithm:").pack()
    algorithm_menu = ttk.Combobox(root, textvariable=algorithm_var,
                                   values=["FCFS", "SJF", "Round Robin", "Priority Scheduling"])
    algorithm_menu.pack()

    time_quantum_entry = tk.Entry(root)
    ttk.Label(root, text="Time Quantum (for Round Robin):").pack()
    time_quantum_entry.pack()

    process_table = ttk.Treeview(root, columns=("PID", "Arrival Time", "Burst Time", "Priority"), show="headings")
    process_table.heading("PID", text="PID")
    process_table.heading("Arrival Time", text="Arrival Time")
    process_table.heading("Burst Time", text="Burst Time")
    process_table.heading("Priority", text="Priority")
    process_table.pack()

    def add_process():
        try:
            arrival, burst, priority = int(arrival_entry.get()), int(burst_entry.get()), int(priority_entry.get())
            if arrival < 0 or burst <= 0 or priority < 0:
                messagebox.showerror("Input Error", "Values must be positive integers.")
                return
            process_table.insert("", "end", values=(len(process_table.get_children()) + 1, arrival, burst, priority))
        except ValueError:
            messagebox.showerror("Input Error", "Please enter valid numeric values.")

    ttk.Label(root, text="Arrival Time:").pack()
    arrival_entry = tk.Entry(root)
    arrival_entry.pack()

    ttk.Label(root, text="Burst Time:").pack()
    burst_entry = tk.Entry(root)
    burst_entry.pack()

    ttk.Label(root, text="Priority:").pack()
    priority_entry = tk.Entry(root)
    priority_entry.pack()

    ttk.Button(root, text="Add Process", command=add_process).pack()
    ttk.Button(root, text="Run Simulation", command=lambda: run_simulation(algorithm_var, time_quantum_entry, process_table)).pack()
    
    root.mainloop()
